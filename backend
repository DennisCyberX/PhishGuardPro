# PhishGuard Backend (FastAPI)

from fastapi import FastAPI, UploadFile, File, HTTPException
from pydantic import BaseModel
from typing import List
import uvicorn
import os
import aiomysql

app = FastAPI()

# Database connection settings (to be modified for actual deployment)
DATABASE_CONFIG = {
    "host": "localhost",
    "user": "root",
    "password": "password",
    "db": "phishguard",
}

# AI Model Placeholder (Mocked for now)
def detect_phishing(url: str) -> str:
    """Mock function to detect phishing URLs"""
    return "phishing" if "malicious" in url else "safe"

# API Endpoints
@app.post("/analyze-url/")
async def analyze_url(url: str):
    result = detect_phishing(url)
    return {"url": url, "status": result}

@app.post("/upload-screenshot/")
async def upload_screenshot(file: UploadFile = File(...)):
    file_location = f"uploads/{file.filename}"
    with open(file_location, "wb") as buffer:
        buffer.write(await file.read())
    return {"filename": file.filename, "status": "uploaded"}

if __name__ == "__main__":
    uvicorn.run(app, host="0.0.0.0", port=8000)
